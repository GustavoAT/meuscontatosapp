/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package meuscontatos;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Gustavo Teixeira
 * v1 - 2019
 */
public class Frameprincipal extends javax.swing.JFrame {

    /**
     * Creates new form 
     */
    public Frameprincipal() {
        initComponents();
        conectarBanco();
        iniciaTitulos();
        iniciaPaineis();
        preencherJlist();
        iniciaBotoes();
        iniciaCombobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jscrolp_vis = new javax.swing.JScrollPane();
        jPanel_vis = new javax.swing.JPanel();
        jscrollp_nomes = new javax.swing.JScrollPane();
        jList_nomes = new javax.swing.JList<>();
        jPanel_menu = new javax.swing.JPanel();
        jtf_pesquisar = new javax.swing.JTextField();
        jbt_novo = new javax.swing.JButton();
        jbt_editar = new javax.swing.JButton();
        jbt_excluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MeusContatos");
        setPreferredSize(new java.awt.Dimension(549, 370));

        jscrolp_vis.setPreferredSize(new java.awt.Dimension(416, 318));

        javax.swing.GroupLayout jPanel_visLayout = new javax.swing.GroupLayout(jPanel_vis);
        jPanel_vis.setLayout(jPanel_visLayout);
        jPanel_visLayout.setHorizontalGroup(
            jPanel_visLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 416, Short.MAX_VALUE)
        );
        jPanel_visLayout.setVerticalGroup(
            jPanel_visLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );

        jscrolp_vis.setViewportView(jPanel_vis);

        jscrollp_nomes.setMaximumSize(new java.awt.Dimension(133, 32767));

        jList_nomes.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jList_nomes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList_nomes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList_nomesValueChanged(evt);
            }
        });
        jscrollp_nomes.setViewportView(jList_nomes);

        jPanel_menu.setMaximumSize(new java.awt.Dimension(32767, 44));

        jtf_pesquisar.setForeground(new java.awt.Color(153, 153, 153));
        jtf_pesquisar.setText("pesquisar...");
        jtf_pesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_pesquisarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_pesquisarFocusLost(evt);
            }
        });

        jbt_novo.setText("Novo");
        jbt_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_novoActionPerformed(evt);
            }
        });

        jbt_editar.setText("Editar");
        jbt_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_editarActionPerformed(evt);
            }
        });

        jbt_excluir.setText("Excluir");
        jbt_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_excluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_menuLayout = new javax.swing.GroupLayout(jPanel_menu);
        jPanel_menu.setLayout(jPanel_menuLayout);
        jPanel_menuLayout.setHorizontalGroup(
            jPanel_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_menuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtf_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jbt_novo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbt_editar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbt_excluir)
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jPanel_menuLayout.setVerticalGroup(
            jPanel_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_menuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbt_novo)
                    .addComponent(jbt_editar)
                    .addComponent(jbt_excluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jscrollp_nomes, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jscrolp_vis, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addComponent(jPanel_menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel_menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jscrolp_vis, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                    .addComponent(jscrollp_nomes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbt_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_excluirActionPerformed
        excluirPessoa();
    }//GEN-LAST:event_jbt_excluirActionPerformed

    private void jtf_pesquisarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_pesquisarFocusGained
        jtf_pesquisar.selectAll();
        jtf_pesquisar.setForeground(new java.awt.Color(0, 0, 0));
    }//GEN-LAST:event_jtf_pesquisarFocusGained

    private void jtf_pesquisarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_pesquisarFocusLost
        if (jtf_pesquisar.getText().equalsIgnoreCase("")) {
            jtf_pesquisar.setText("pesquisar...");
            jtf_pesquisar.setForeground(new java.awt.Color(153, 153, 153));
        }
    }//GEN-LAST:event_jtf_pesquisarFocusLost

    private void jbt_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_novoActionPerformed
        visualizarTextfield(false);
    }//GEN-LAST:event_jbt_novoActionPerformed

    private void jbt_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_editarActionPerformed
        visualizarTextfield(true);
    }//GEN-LAST:event_jbt_editarActionPerformed

    private void jList_nomesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList_nomesValueChanged
        atualizaVisualizacao();
    }//GEN-LAST:event_jList_nomesValueChanged

   private void preencherJlist(){
       pessoas = entitymanager.createNamedQuery("Pessoa.findAll",Pessoa.class)
               .getResultList();
       String[] nomes;
       if(!pessoas.isEmpty()){
            nomes = new String[pessoas.size()];
            for (int i = 0; i < pessoas.size(); i++) {
                if(!pessoas.get(i).getTelefoneList().isEmpty()){
                     nomes[i] = "<html>"+
                             pessoas.get(i).getNome()+
                             "<br>->"+
                             pessoas.get(i).getTelefoneList().get(0).getTelefone()+
                             "</html>";
                }else{
                    nomes[i] = "<html>"+
                             pessoas.get(i).getNome()+
                             "</html>";
                }
            }
       }else{
            nomes = new String[]{"Lista Vazia"};
       }
       
       jList_nomes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = nomes;
            @Override
            public int getSize() { return strings.length; }
            @Override
            public String getElementAt(int i) { return strings[i]; }
        });
       jList_nomes.setSelectedIndex(0);
   }
   
   private void iniciaTitulos(){
        label_titulo = new JLabel[8];
        label_titulo[0] = new JLabel("<html><h3>Nome</h3></html>");
        label_titulo[1] = new JLabel("<html><h3>Sobrenome</h3></html>");
        label_titulo[2] = new JLabel("<html><h3>CPF</h3></html>");
        label_titulo[3] = new JLabel("<html><h3>Estado Civil</h3></html>");
        label_titulo[4] = new JLabel("<html><h3>Profissão</h3></html>");
        label_titulo[5] = new JLabel("<html><h3>Telefone</h3></html>");
        label_titulo[6] = new JLabel("<html><h3>E-mail</h3></html>");
        label_titulo[7] = new JLabel("<html><h3>Endereço</h3></html>");
        for (JLabel label_titulo1 : label_titulo) {
            label_titulo1.setAlignmentX((float) 0.1);
        }
   }
   
   private void iniciaPaineis(){
       jPanel_vis.setLayout(new BoxLayout(jPanel_vis, BoxLayout.PAGE_AXIS));
       jpanelft = new JPanel();
       jpaneltitulo = new JPanel();
       jpanelbotoes = new JPanel();
       //Jpanel com layout box, que permite adicionar na vertical ou na horizontal
       jpanelft.setLayout(new BoxLayout(jpanelft, BoxLayout.LINE_AXIS));
       jpaneltitulo.setLayout(new BoxLayout(jpaneltitulo, BoxLayout.PAGE_AXIS));
       jpanelbotoes.setLayout(new BoxLayout(jpanelbotoes, BoxLayout.LINE_AXIS));
       jptel = new JPanel();
       jptel.setLayout(new BoxLayout(jptel, BoxLayout.PAGE_AXIS));
   }
   
   private void iniciaCombobox(){
       String[] estadoscivis = {"Solteiro", "Casado", "Separado", "Divorciado"};
       jc_estadocivil = new JComboBox(estadoscivis);
   }
   
   private void carregaTextfieldPessoa(){
       int sel = jList_nomes.getSelectedIndex();
       jtextf_info[0] = new JTextField(pessoas.get(sel).getNome());
       jtextf_info[1] = new JTextField(pessoas.get(sel).getSobrenome());
       jtextf_info[2] = new JTextField(pessoas.get(sel).getCpf());
       jtextf_info[3] = new JTextField(pessoas.get(sel).getProfissao());
       jc_estadocivil.setSelectedItem(pessoas.get(sel).getEstadoCivil());
       tf_telefones = new ArrayList();
       bt_tel = new ArrayList();
       tf_emails = new ArrayList();
       tf_enderecos = new ArrayList();
       for(Telefone tel : pessoas.get(sel).getTelefoneList()){
           JTextField[] jttel = new JTextField[2];
           jttel[0] = new JTextField(tel.getTipo());
           jttel[1] = new JTextField(tel.getTelefone());
           tf_telefones.add(jttel);
       }
       for(Email email : pessoas.get(sel).getEmailList()){
           JTextField[] jtemail = new JTextField[2];
           jtemail[0] = new JTextField(email.getTipo());
           jtemail[1] = new JTextField(email.getEmail());
           tf_emails.add(jtemail);
       }
       for(Endereco end : pessoas.get(sel).getEnderecoList()){
           JTextField[] jtend = new JTextField[6];
           jtend[0] = new JTextField(end.getTipo());
           jtend[1] = new JTextField(end.getLogradouro());
           jtend[2] = new JTextField(end.getBairro());
           jtend[3] = new JTextField(end.getCidade());
           jtend[4] = new JTextField(end.getEstado());
           jtend[5] = new JTextField(end.getCep());
           tf_enderecos.add(jtend);
       }
   }
   
   private void carregaLabelPessoa(){
       //Variáveis dos componentes  
        label_info = new JLabel[4];
        int index = jList_nomes.getSelectedIndex();
        if(index < 1){
            index = 0;
            jList_nomes.setSelectedIndex(index);
        }
        label_info[0] = new JLabel(
            pessoas.get(index).getNomecompleto());
        label_info[1] = new JLabel(
            pessoas.get(index).getCpf());
        label_info[2] = new JLabel(
            pessoas.get(index).getEstadoCivil());
        label_info[3] = new JLabel(
            pessoas.get(index).getProfissao());
   }
   
   private void novoTextfield(){
        jtextf_info[0] = new JTextField();
        jtextf_info[1] = new JTextField();
        jtextf_info[2] = new JTextField();
        jtextf_info[3] = new JTextField();
        jtextf_info[4] = new JTextField();
        tf_telefones = new ArrayList();
        bt_tel = new ArrayList();
        JTextField[] jttel = new JTextField[2];
        jttel[0] = new JTextField();
        jttel[1] = new JTextField();
        tf_telefones.add(jttel);
        tf_emails = new ArrayList();
        JTextField[] jtemail = new JTextField[2];
        jtemail[0] = new JTextField();
        jtemail[1] = new JTextField();
        tf_emails.add(jtemail);
        tf_enderecos = new ArrayList();
        JTextField[] jtend = new JTextField[6];
        jtend[0] = new JTextField();
        jtend[1] = new JTextField();
        jtend[2] = new JTextField();
        jtend[3] = new JTextField();
        jtend[4] = new JTextField();
        jtend[5] = new JTextField();
        tf_enderecos.add(jtend);
   }
   
   private void visualizarTextfield(boolean modoeditar){
       //Limpa os componentes do jpanel
        jPanel_vis.removeAll();
        jpaneltitulo.removeAll();
        jpanelft.removeAll();
        
        jbt_editar.setEnabled(false);
        jbt_novo.setEnabled(false);
        jbt_excluir.setEnabled(false);
        jList_nomes.setEnabled(false);
        
        //Informações
        jtextf_info = new JTextField[5];
        if(modoeditar){
            carregaTextfieldPessoa();
            jbsalvar.setActionCommand("editar");
            
        }else{
            novoTextfield();
            jbsalvar.setActionCommand("novo");
        }
        //carregando a imagem em tamanho 60x60
        jlabel_foto = new JLabel(new ImageIcon(new ImageIcon(getClass()
                .getResource("media/user1.png")).getImage()
                .getScaledInstance(60, 60, java.awt.Image.SCALE_SMOOTH)));

        jpaneltitulo.add(label_titulo[0]);
        jpaneltitulo.add(jtextf_info[0]);
        jpanelft.add(jpaneltitulo);
        jpanelft.add(Box.createHorizontalGlue());
        jpanelft.add(jlabel_foto);
        jpanelft.setAlignmentX((float) 0.05);
        jpanelbotoes.add(Box.createHorizontalGlue());
        jpanelbotoes.add(jbsalvar);
        jpanelbotoes.add(Box.createRigidArea(new Dimension(0,10)));
        jpanelbotoes.add(jbcancelar);
        jpanelft.setAlignmentX((float) 0.05);
        jPanel_vis.add(jpanelft);
        jPanel_vis.add(Box.createRigidArea(new Dimension(0,10)));
        
        for (int i = 1; i < 3; i++) {
            jPanel_vis.add(label_titulo[i]);
            jPanel_vis.add(jtextf_info[i]);
            jPanel_vis.add(Box.createRigidArea(new Dimension(0,10)));
        }
        jPanel_vis.add(label_titulo[3]);
        jPanel_vis.add(jc_estadocivil);
        jPanel_vis.add(Box.createRigidArea(new Dimension(0,10)));
        jPanel_vis.add(label_titulo[4]);
        jPanel_vis.add(jtextf_info[3]);
        jPanel_vis.add(Box.createRigidArea(new Dimension(0,10)));
        jPanel_vis.add(label_titulo[5]);
        for (JTextField[] jtftel : tf_telefones) {
            JPanel jptel2 = new JPanel();
            jptel2.setLayout(new BoxLayout(jptel2, BoxLayout.LINE_AXIS));
            jptel2.add(jtftel[0]);
            jptel2.add(jtftel[1]);
            JButton jbmenos = new JButton("-");
            if(tf_telefones.indexOf(jtftel) == 0){
                JButton jbmais = new JButton("+");
                jptel2.add(jbmais);
                botaoMaisTel(jbmais);
            }else{
                bt_tel.add(jbmenos);
                jptel2.add(jbmenos);
                botaoMenosTel(jbmenos);    
            }
            jptel.add(jptel2);
            jPanel_vis.add(jptel);
        }
        jPanel_vis.add(Box.createRigidArea(new Dimension(0,10)));
        jPanel_vis.add(label_titulo[6]);
        for (JTextField[] jtfemail : tf_emails) {
            JPanel jpemail = new JPanel();
            jpemail.setLayout(new BoxLayout(jpemail, BoxLayout.LINE_AXIS));
            jpemail.add(jtfemail[0]);
            jpemail.add(jtfemail[1]);
            jPanel_vis.add(jpemail);
        }
        jPanel_vis.add(Box.createRigidArea(new Dimension(0,10)));
        jPanel_vis.add(label_titulo[7]);
        for (JTextField[] jtfen : tf_enderecos) {
            JPanel jpend = new JPanel();
            jpend.setLayout(new BoxLayout(jpend, BoxLayout.PAGE_AXIS));
            JPanel[] jpend2 = new JPanel[6];
            String[] endtit = {
                "Tipo","Logradouro","Bairro","Cidade","Estado","Cep"
            };
            for (int i = 0; i < jpend2.length; i++) {
                jpend2[i] = new JPanel();
                jpend2[i].setLayout(new BoxLayout(jpend2[i], BoxLayout.LINE_AXIS));
                jpend2[i].add(new JLabel(endtit[i]));
                jpend2[i].add(jtfen[i]);
                jpend.add(jpend2[i]);
            }
            
            jPanel_vis.add(jpend);
        }
        jPanel_vis.add(Box.createRigidArea(new Dimension(0,10)));
        
        jPanel_vis.add(jpanelbotoes);
        jPanel_vis.setBorder(BorderFactory.createEmptyBorder(10, 10, 0, 10));
        
        jscrolp_vis.validate();
   }
   
   private void atualizaVisualizacao(){
       //Limpa os componentes do jpanel
        jPanel_vis.removeAll();
        jpaneltitulo.removeAll();
        jpanelft.removeAll();

        if(!pessoas.isEmpty()){
            carregaLabelPessoa();
            //carregando a imagem em tamanho 60x60
            jlabel_foto = new JLabel(new ImageIcon(new ImageIcon(getClass()
                    .getResource("media/user1.png")).getImage()
                    .getScaledInstance(60, 60, java.awt.Image.SCALE_SMOOTH)));

            jpaneltitulo.add(label_titulo[0]);
            jpaneltitulo.add(label_info[0]);
            jpanelft.add(jpaneltitulo);
            jpanelft.add(Box.createHorizontalGlue());
            jpanelft.add(jlabel_foto);
            jPanel_vis.add(jpanelft);
            jPanel_vis.add(Box.createRigidArea(new Dimension(0,10)));
            for (int i = 1; i < 4; i++) {
               jPanel_vis.add(label_titulo[i+1]);
               jPanel_vis.add(label_info[i]);
               jPanel_vis.add(Box.createRigidArea(new Dimension(0,10)));
            }
            int index = jList_nomes.getSelectedIndex();
            jPanel_vis.add(label_titulo[5]);
            for(Telefone te : pessoas.get(index).getTelefoneList()){
                JPanel jptel = new JPanel();
                jptel.setLayout(new BoxLayout(jptel, BoxLayout.LINE_AXIS));
                jptel.add(new JLabel(te.getTipo()+": "));
                jptel.add(new JLabel(te.getTelefone()));
                jptel.add(Box.createHorizontalGlue());
                jPanel_vis.add(jptel);
            }
            jPanel_vis.add(label_titulo[6]);
            for(Email ema : pessoas.get(index).getEmailList()){
                JPanel jpmail = new JPanel();
                jpmail.setLayout(new BoxLayout(jpmail, BoxLayout.LINE_AXIS));
                jpmail.add(new JLabel(ema.getTipo()+": "));
                jpmail.add(new JLabel(ema.getEmail()));
                jpmail.add(Box.createHorizontalGlue());
                jPanel_vis.add(jpmail);
            }
            jPanel_vis.add(Box.createRigidArea(new Dimension(0,10)));
            jPanel_vis.add(label_titulo[7]);
            for(Endereco end : pessoas.get(index).getEnderecoList()){
                JPanel jpend = new JPanel();
                jpend.setLayout(new BoxLayout(jpend, BoxLayout.LINE_AXIS));
                jpend.add(new JLabel(end.getTipo()+": "));
                jpend.add(new JLabel(end.getEndeCompleto()));
                jPanel_vis.add(jpend);
            }
             jPanel_vis.setBorder(BorderFactory.createEmptyBorder(10, 10, 0, 10));
            jscrolp_vis.validate();
        }
   }
   
   private void iniciaBotoes(){
       jbsalvar = new JButton("Salvar");
       jbsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarPessoa(evt);
            }
        });
       jbcancelar = new JButton("Cancelar");
       jbcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarInicio();
            }
        });
   }
   
   private void botaoMaisTel(JButton bt){
       bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maisTel();
            }
        });
   }
   
   private void maisTel(){
       JTextField[] jttel = new JTextField[2];
       jttel[0] = new JTextField();
       jttel[1] = new JTextField();
       tf_telefones.add(jttel);
       JPanel jptel2 = new JPanel();
       jptel2.setLayout(new BoxLayout(jptel2, BoxLayout.LINE_AXIS));
       jptel2.add(jttel[0]);
       jptel2.add(jttel[1]);
       JButton jbmenos = new JButton("-");
       bt_tel.add(jbmenos);
       jptel2.add(jbmenos);
       botaoMenosTel(jbmenos);
       jptel.add(jptel2);
       jPanel_vis.validate();
   }
   
   private void botaoMenosTel(JButton bt){
       bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menosTel(evt);
            }
        });
   }
   
   private void menosTel(java.awt.event.ActionEvent evt){
       int index = bt_tel.indexOf((JButton)evt.getSource());
       tf_telefones.remove(index+1);
       bt_tel.remove(index);
       jptel.remove(index+1);
       jPanel_vis.validate();
   }
   
   private void salvarPessoa(java.awt.event.ActionEvent evt){
       entitymanager.getTransaction().begin();
       Pessoa pe;
       if(evt.getActionCommand().equals("editar")){
           int index = jList_nomes.getSelectedIndex();
           pe = pessoas.get(index);
       }else{
           pe = new Pessoa();
           pe.setTelefoneList(new ArrayList<>());
           pe.setEmailList(new ArrayList<>());
           pe.setEnderecoList(new ArrayList<>());
       }
       pe.setNome(jtextf_info[0].getText());
       pe.setSobrenome(jtextf_info[1].getText());
       pe.setCpf(jtextf_info[2].getText());
       pe.setEstadoCivil(jc_estadocivil.getSelectedItem().toString());
       pe.setProfissao(jtextf_info[3].getText());
       List<Telefone> tel_list = pe.getTelefoneList();
       for (int i = 0; i < tf_telefones.size(); i++) {
           Telefone telefone;
           if(i < tel_list.size()){
               telefone = tel_list.get(i);
               telefone.setTipo(tf_telefones.get(i)[0].getText());
               telefone.setTelefone(tf_telefones.get(i)[1].getText());
               pe.setTelefone(i, telefone);
           }else{
               telefone = new Telefone();
               telefone.setTipo(tf_telefones.get(i)[0].getText());
               telefone.setTelefone(tf_telefones.get(i)[1].getText());
               telefone.setIdPessoa(pe);
               pe.addTelefone(telefone);
           }
       }
       List<Email> em_list = pe.getEmailList();
       for (int i = 0; i < tf_emails.size(); i++) {
           Email email;
           if(i < em_list.size()){
               email = em_list.get(i);
               email.setTipo(tf_emails.get(i)[0].getText());
               email.setEmail(tf_emails.get(i)[1].getText());
               pe.setEmail(i, email);
           }else{
               email = new Email();
               email.setTipo(tf_emails.get(i)[0].getText());
               email.setEmail(tf_emails.get(i)[1].getText());
               email.setIdPessoa(pe);
               pe.addEmail(email);
           }
       }
       List<Endereco> ende_list = pe.getEnderecoList();
       for (int i = 0; i < tf_enderecos.size(); i++) {
           Endereco endereco;
           if(i < ende_list.size()){
               endereco = ende_list.get(i);
               endereco.setTipo(tf_enderecos.get(i)[0].getText());
               endereco.setLogradouro(tf_enderecos.get(i)[1].getText());
               endereco.setBairro(tf_enderecos.get(i)[2].getText());
               endereco.setCidade(tf_enderecos.get(i)[3].getText());
               endereco.setEstado(tf_enderecos.get(i)[4].getText());
               endereco.setCep(tf_enderecos.get(i)[5].getText());
               pe.setEndereco(i, endereco);
           }else{
               endereco = new Endereco();
               endereco.setTipo(tf_enderecos.get(i)[0].getText());
               endereco.setLogradouro(tf_enderecos.get(i)[1].getText());
               endereco.setBairro(tf_enderecos.get(i)[2].getText());
               endereco.setCidade(tf_enderecos.get(i)[3].getText());
               endereco.setEstado(tf_enderecos.get(i)[4].getText());
               endereco.setCep(tf_enderecos.get(i)[5].getText());
               endereco.setIdPessoa(pe);
               pe.addEndereco(endereco);
           }
       }
       if(evt.getActionCommand().equals("novo")){
           entitymanager.persist(pe);
       }
       entitymanager.getTransaction().commit();
       voltarInicio();
       preencherJlist();
   }
   
   private void excluirPessoa(){
       int resp;
       resp = JOptionPane.showConfirmDialog(null, "Tem certeza?",
               "Excluir pessoa",
               JOptionPane.YES_NO_OPTION,
               JOptionPane.WARNING_MESSAGE);
       
       if(resp == JOptionPane.YES_OPTION){
        Pessoa pe;
        int index = jList_nomes.getSelectedIndex();
        pe = pessoas.get(index);
        entitymanager.getTransaction().begin();
        entitymanager.remove(pe);
        entitymanager.getTransaction().commit();
        preencherJlist();
       }
   }
   
   private void voltarInicio(){
       jbt_editar.setEnabled(true);
       jbt_novo.setEnabled(true);
       jbt_excluir.setEnabled(true);
       jList_nomes.setEnabled(true);
       atualizaVisualizacao();
   }
   
   private void conectarBanco(){
       factory = Persistence.
               createEntityManagerFactory("MeusContatosAppPU");
       entitymanager = factory.createEntityManager();
   }
   
   private void desconectarBanco(){
       entitymanager.close();
       factory.close();
   }
   
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frameprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frameprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frameprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frameprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Frameprincipal().setVisible(true);
        });
    }

    EntityManagerFactory factory;
    EntityManager entitymanager;
    List<Pessoa> pessoas;
    JLabel[] label_titulo;
    JLabel[] label_info;
    JLabel jlabel_foto;
    JPanel jpanelft;
    JPanel jpaneltitulo;
    JPanel jpanelbotoes;
    JPanel jptel;
    JButton jbsalvar ;
    JButton jbcancelar;
    JTextField[] jtextf_info;
    JComboBox jc_estadocivil;
    List<JTextField[]> tf_telefones;
    List<JButton> bt_tel;
    List<JTextField[]> tf_emails;
    List<JTextField[]> tf_enderecos;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList_nomes;
    private javax.swing.JPanel jPanel_menu;
    private javax.swing.JPanel jPanel_vis;
    private javax.swing.JButton jbt_editar;
    private javax.swing.JButton jbt_excluir;
    private javax.swing.JButton jbt_novo;
    private javax.swing.JScrollPane jscrollp_nomes;
    private javax.swing.JScrollPane jscrolp_vis;
    private javax.swing.JTextField jtf_pesquisar;
    // End of variables declaration//GEN-END:variables
}
